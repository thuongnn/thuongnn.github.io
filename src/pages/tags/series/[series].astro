---
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Card from "@/components/Card.astro";
import { getCollection } from "astro:content";
import { getAllSeries } from "@/utils/series";
import getSortedPosts from "@/utils/getSortedPosts";
import type { CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const series = getAllSeries();
  return series.map(series => ({
    params: { series: series.folder },
    props: { series },
  }));
}

const { series } = Astro.props;
const { folder, name, description } = series;

// Lấy tất cả bài viết
const allPosts = await getCollection("blog");
const posts = allPosts.filter(post => {
  const postPath = post.id.split("/");
  return postPath[0] === folder;
});

// Nhóm bài viết theo thư mục con
const postsByFolder = posts.reduce(
  (acc, post) => {
    const postPath = post.id.split("/");
    const subFolder = postPath[1] || "root";
    if (!acc[subFolder]) {
      acc[subFolder] = [];
    }
    acc[subFolder].push(post);
    return acc;
  },
  {} as Record<string, CollectionEntry<"blog">[]>
);

// Sắp xếp các thư mục con theo alphabet
const sortedFolders = Object.keys(postsByFolder).sort((a, b) => {
  if (a === "root") return -1;
  if (b === "root") return 1;
  return a.localeCompare(b);
});
---

<Layout title={name} description={description}>
  <Header />
  <main id="main-content" data-layout="index">
    <section class="pt-12 pb-6">
      <div class="container mx-auto px-4">
        <h2 class="mb-6 text-2xl font-semibold tracking-wide">
          {name}
        </h2>
        {
          description && (
            <p class="mb-6 text-gray-600 dark:text-gray-400">{description}</p>
          )
        }
        <div class="pl-4">
          {
            sortedFolders.map(folder => (
              <div class="mb-6">
                <div
                  class="group flex cursor-pointer items-center"
                  data-folder={folder}
                >
                  <span class="folder-toggle mr-2 text-gray-500">▼</span>
                  <h3 class="text-xl font-semibold capitalize group-hover:text-accent">
                    {folder}
                  </h3>
                </div>
                <div class="pl-6" data-content={folder}>
                  <ul class="space-y-2">
                    {getSortedPosts(postsByFolder[folder]).map(post => (
                      <li>
                        <Card variant="h3" {...post} />
                      </li>
                    ))}
                  </ul>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </section>
  </main>
  <Footer />
</Layout>

<script>
  document.addEventListener("astro:page-load", () => {
    // Handle folder toggles
    document.querySelectorAll("[data-folder]").forEach(folder => {
      folder.addEventListener("click", () => {
        const folderName = folder.getAttribute("data-folder");
        const content = document.querySelector(
          `[data-content="${folderName}"]`
        );
        const toggle = folder.querySelector(".folder-toggle");

        if (content) {
          content.classList.toggle("hidden");
          if (toggle) {
            toggle.textContent = content.classList.contains("hidden")
              ? "▶"
              : "▼";
          }
        }
      });
    });
  });
</script>

<style>
  .folder-toggle {
    transition: transform 0.2s;
  }
  [data-content]:not(.hidden) .folder-toggle {
    transform: rotate(90deg);
  }
</style>
